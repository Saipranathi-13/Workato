What is Workato?
It is defined with 2 words called work and automation. Workato is essentially an enterprise garde automation platform
in It finance and all the different departments we can use waorkato and we can build automation.Workato is essentially serverless platform
Workato, It allows users to automate business processess like this in a very usual visual way without a developer skill set.
This is what refer to low code. no code
Tools in workato:
ETL/ELT: involving bulk. Transfer of data could be thousands of records or millions of records.
API Management: can expose your integration to external parties or apps if required, where workato
can also create workflow.
conversational bots are able to build and deploy interactive work bots in the workplace.
Workato environment- workato workspaces- different integrations that will be building our recipes.
1. Dev Workspaces: developing recipes in development team
2. QA workspace: QA team to check your recipe 
3. Prod workspace: all of your instances are connected to your production environment.
Recipes can be migrated from one account to another via the Recipe Lifecycle Management tool.
Each Workato user may be given access to multiple environment.
Recipe is very similar to like a cookbook. It is logical steps that will be executed to meet your integration.
recipe can be create using 2 methods. 1. our own 2. cloning
3 main ingredients of a recipe
1. Connections: all applications need to have connected to your recipe.
2. Trigger: can only be 1, what your recipe will listen for, or this is what will tell your recipe to kick start.
3. actions: all of the steps that you would want to execute in your recipe. no limit for actions.
if we dont have trigger then recipe will not start.
2 ways to share recipe:
1. List recipe: we have list of the recipes
2. Private sharing link: sharing link it will be private.
Connections: when we are connect to other applications inside worato. it allows you to pick authentication options
basic auth, Oauth2, API tokens, custom protocols.It is simple like username and password.
Triggers have different types:
1. Real-time: implemented with web hooks
2. Polling- implemented with web hooks
3. Scheduled- scheduling the time
Trigger events are delivered in the same order as events were created or modified in theapp- workato cursors.
Trigger conditions: you are able to define more information in your triggers if you do not want to process all of the records.
recipe steps can be simple actions, or control flow statements that help you describe business logic.
what work does your recipe do:
1. actions types- adding, searching,updating, deleting
2. control- conditions, loops,error monitor(try-catch), stop, Recipe functions.
3. Data- single, Batch/list.
OOB(out-of-the-box) actions:
   create, update,upsert,search,get delete.
Data mapping- mapping, formulas, lookups.
Recipe data box, this is a placeholder for the information from your previous steps.
data pills: information in recipe box which we have in small boxes with data.
.slice(start_index,length)- get part of a string.
Data types: data pills can be of the following 
string, integer, number, object, date, date time, boolean, Array.list.
Formula Mode- 
split: split up a string based on a delimiter
First: Returns the first iteam in the list.
Upcase: converts the entire string into upper case.
Testing ensures your automation's behavior and data processing are correct.
The Operations hub dashboard, accessed through the navigation bar, allows you to visualize real-time data pertaining to the recipes and connections in your Workato account at a glance.
If the recipe is edited and saved, the recipe will increment to a new version.
Types of recipe changes : 
   1. schema changes: changing the schema of the recipe
   2. logic changes: changing the logic of the recipe
3 parts of the setting tab
   1. general: you can choose the concurrency number depending on the number of jobs the recipe processes simultaneously. You can also select a higher number for high-volume transactions.
   2. data retention: you can set a data retention policy as instructed by your organization or team.
   3. sharing: you can list your recipe in the Workato Community Library.
Running a test job requires:
   A fully configured trigger
   Valid data mappings
   Valid connections
The Workato Community Library contains integrations and workflow automations built by the Workato community. Find, clone, and personalize them to your specific needs.
Intelligent business processes:
1. Enterprise-grade foundation
2. citizen integrators
3. Conversational integration
4. It governance 
5. Extensible platform
Levels of functionality:
   1. Data integration: data integration without any manual effort and without data duplication.
   2. Process integration: such as workflow automation, which enables u to create efficent business processes across multiple applications.
   3. Experience integration: can talk to your applications or business processes to send important notifications or carry out commands on your behalf.
Intelligent process automation: It is a workflow that starts with a trigger event and a list of one or more actions.
Workato recipe allows you to automate processes b/w the tools, systems, and apps that you use.
Assets include smart folders for Recipes and Connections you've created in your account. You can also access your Trash bin from here.
Projects help you create, organize, and manage your automation lifecycle to meet your business goals by grouping people and assets that work together.
The Operations hub dashboard allows users to visualize real-time data pertaining to the recipes and connections in their Workato account at a glance. It provides key insights, analytics, and actions so you can discover and resolve issues faster.
Workato Tools help perform three main functions: Build recipes, connect apps and collaborate and manage recipes
Recipes are automated workflows built by users that can span multiple applications and are simple yet powerful. 
The Workato recipe editor is the powerhouse of the Workato platform and the main area of focus throughout this course.










Automation pro 2



Conditional Actions: set a condition within your recipe to better define the overall workflow processing logic.
Conditional Actions will only be carried out only if the specified condition is true.
2 types of conditional actions:
1. IF- will only be executed when the conditions are met.
2. IF-ELSE- if conditions are true, actions within the if block will be executed . otherwise if false the actions within the else block will be executed.
Workato will work on nested conditional actions.
 we have 3 different fileds to configure conditional actions
1. data field: typically mapped by a dynamic data pill
2. condition: depends on data type 
3. value: mapped by a fixed input value.
conditions are sensitive to data types.
common use cases:
1. Deduplication logic: when you sync over information to other, there would not be the same record combined. 
2. stopping the recipe
3. invoking different function recipes.
4. setting up notifications for different error messages.
Error Handling: used to monitor actions and retry failed steps
configuring error monitoring and handling:
1. retry the sequence of actions
2. take remedial actions
we can retry 3 times in the monitor action block.
common mistakes:
1. using too much try/catch
2. neglecting to mark the job as "failed" when using the stop action
We do not have limit to create the nested monitor blocks.
Maximum error retries that can use is 3 times and can also change the interval b/w these 3 tries. it can be 6 or 4 or 1 seconds.
Repeat Actions: Loop through a list of records
The repeat action is useful for going through that certain batch of records.
Repeat action is useful to go through each item in your batch dispatch.
common use cases:
1. csv/database rows
2. order line items
3. any type of list/array
Variables: placeholder to store data used to refer the information and also we can manipulate the information
common use cases of variables:
Transforming data
   Formulas- reducing complexity with variables
   Lists- simplify operations and actions on muti-row outputs of lists
           Basic Lists: rows are self-contained where all the information required is explicitly expressed in each filed
            nested list: details of the rows in a paremt list are contained in a separate child list.
Mapping data in List
   1. Directly into an action without list processing:
   2. Into an action with a repeat step 
   3. into an action with a list input
Processing list in recipes:
    1. search records in an application(search related action)
    2. Get list of records
    3. Processing CSV rows
An uninitialized variable has a value of null or nill.
Environment properties can be re-used in recipes. 
Default value of a variable with a type of "integer" if it is not specified by the user- nill

Lookup tables: mini-database table
organized like a database table with columns and rows of data. 
common use cases:
static reference data
temporary logs/error handling
compiling data for daily reports
mistakes: 
storing large amounts of data
storing lookup data that already exists in source systems.
The total no of rows we can retrieve from a lookup table: 10,000


Every application consists of 3 pillars:
    1. Data storage: enables u to store data in data tables and access your data through the workflow app connector.
    2. The user interface for business users in Workflow apps portal. It is partially generated by Workato, and partially customized by creating Pages.
    3. Business Logic: The logic of the application, implemented in Workato recipes.
Data tables: Workato Data Tables provide robust, scalable, and secure structured data storage in Workato. It enables you to define data tables in projects.


Technical beginner:

create intelligent process automation workflows to remove the need for labor and manual tasks this increases the predictability of services as well as reduces error from manual tasks.
Basic building blocks:
   1. Trigger event: by using conditions as part of the workflow logic to determine the action that needs to be taken.
   2. Actions: data points of each item in the list to determine which best suits your needs this is called a repeat action: as u repeat a set of steps to determine actions that are performed.
   3. End
every recipe works on its own container.
Workbot lets u build customized bots to automate ur workflows.
projects are flexible way to organize ur automation.
dependences: relation ship b/w the connections and recipes
connections: secure way to give access to ur business applications
it notifies an ops team abount the escalated issuse using pagerduty
authentication grants ur team access to the data of your business applications
each app provides different ways to authenticate
basic-username and password
Triggers are events that kick off a recipe.Triggers are time-based, event-based.
Actions are set of tasks u want to automate.
Mappings control the data flow in automation.
API: Application Programming Interface. This isthe software layer between two applications that allows them to talk to one another. See this post from a competitor, which explains APIs well.
API Management is the practice of cataloguing and documenting APIs and making them available for use within a company and by it's suppliers
and/or customers. This also involves governance and security considerations.
Applicant Tracking System, (Examples: Greenhouse, Oracle Taleo). Prospects and customers using Workato for rapid employee growth will likely want to build recipes for their ATS.
BA or BSA Business Analyst or Business Systems Analyst. These describe job titles that are our most common ICP for our direct platform offering. 
3 fundamental use cases for automation: 
   1. Data consistency:
   2. multi step process: 
   3. composite services:




Workato fit 101

The business process: the set of actions and activities that different people or different roles doing task to get an outcome.
Integration: allows data to flow b/w different business applications.(Accessing data from apps)
Automation:(process & task focused)  It is the technology-enabled automation of tasks or business processes
How integration and automation work together: Integration at the core of automation
Integration (data automation)-->Task automation--> Process automation--> Enterprise automation.
Different types of integration:
         Swivel chain integration(Fully manual): their is a person they lookup data from one application and re-type the data in other application.
         File-based integration: (80% comapny's use this apporach) export the data one system and store that data in csv file and then converts into the file which the other system can read.
         API-based integration: one system system send the data by using API and then the data can be in any format to the other application in that application we can update the data.
         UI-based integration: UI will lookup data in one application screen and then enter data in other application screen.
         Database integration: effectively connect to the data base application and select the data and we can push the data directly to the other applications database.
         Mixed interface Integration: get the data from one application and transfer the data into file and then push the data into other application.
Problems in using custom scripts and code:
         unreliable
         difficult to support
         very time intensive
         like jenga-can easily crumble 
         can't easily monitor
         limited experts understand it
Enterprise Automation: It is a platform category aimed at combining experience,process, and data integration capadilities in a single low-code platfome in order to provide both technical and non-technical users the ability to rapidly automate end-to-end business processes.

Recipe function: type of a recipe that can be called from another recipe.
This helps to reduce the length of your recipes by separating a repeatable set of actions.
Use of recipe function: can save time and make recipe creation easy
features of recipe functions:
1. The child can respond back to the parent recipe with relevant data that would be useful for the rest of the recipe.
When the parent recipe is waiting for data from the child recipe, we call it a "Synchronous execution".
while creating recipe function we will have the
Parameters schema: Define data passed in from parent recipe to pass on to the child or otherwise known as recipe function.
result schema: configure data to return to parent recipe.
recipe functions can be used in Error handling, New customer workflow, new It ticket helpdesk,rehire workflow, reusable update employee workflow.

Enterprise Workbot for slack

Workbot is a bot platform that looks & feels like a custom-built internal app. It allows you to eliminate app-hopping and bridge your business applications into one interface,right within slack.
Instead of switching b/w multiple windows, bots provide a minimalistic presentation of critical actions in a single pane of glass.
How does work bot works:
      1. connect to any app with APIs like REST and SOAP, databases,or file systems.
      2. Define the trigger
      3. Define the actions
      4. Execute the workflow
2 simple kinds of bots:
         1. Click-navigation chatbot: involoves through a consistent and predictable UI to execute tasks.
         2. Natural language chatbots:which utilize AI from tools and engines like Google Dialogflow, Amazon lex, and IBM wtason to provide a conversational experience in executing tasks.
Accelerators are Workato's pre-packaged solutions for common automations with high resuability across industries.
Lead Bot: An intuitive bot whose goal is to deliver, review,qualify and assign leads-all with a custom UX designed for speed.
Lead bot helps in:
      Book more meetings
      connect with leads
      create a top-tier experience for new customers
Firefighter Bot: a helpful assistant focused on facilitating internal requests.
      putting out fires
      solve many small problems at once
using this bot we can set automatic reminders and escalations and create and approve requests, all without leaving your slack window.
this is more used for IT helpdesk and lifecycle management.
HR bot: helping you execute end-to-end hiring, onboarding and other HR processess.
This bot makes it easy to review feedback from candidate interview panels that would normally live within a recuriting systems.
3-Worded new command trigger: to uniquely identify & execute wrokbot for slack recipes for their specific workflows.
Slash command is a trigger that's baked into a 3-worded new command trigger. this menas that a workbot recipe can be trigger from both slack interactive components such as slack buttons, select menus, Datapickers etc. and by typing slash "/" followed by the command name.
Global shortcut: similar to a slash command can ne invoked anywhere in slack execute a workflow that doesn.t require context.
Message shortcut: useful in workflows where the starting point is a slack message you'd like to extract with other background details.
The New Dynamic Menu Event Trigger is used to dynamically present a list of options in a select menu based on what users type in real time.
      Trigger that is always paired with a return menu options action.
      Always involves a minimum of 2 recipes
      A parent recipe that creates the select menu.
      A child recipe is invoked from the parent recipe to perform three important things.
The child recipe:
         1. It monitors for dynamic menu events from dynamic menus in modals or trigger parameters.
         2. It dynamically retrieves menu options from backend systems, based on the type-ahead and any search parameters
         3. It returns the menu options to the primary or parent recipe, which will the continue the workflow.
Tips to improve your post:
         1. slack markdown and emojis
         2. Attachement Message field
         3. Attachment colors
         4. Attachment title links



Batch/Bulk processing:
It is a method of running high-volume,repetitive data jobs.
The batch method allows users to process data with little or no use interaction.
Why batch processing:
      efficient way of moving large volumes of data across systems.
Use cases:
      Business intelligence
      case management
      order management
      Marketing operations
      file upload
      Multi-instamce sync
Batch triggers:
Batching enables you to process multiple rows of data or multiple records with just one job.
Batch actions are typically of the form:
      create batch
      update batch
      upsert batch records: it updates if the record exists or creates, if the record doesn't exist.
               Updates or creates multiple records in a single action
               requires a list of records with id's to be updated as the input
Bulk Actions: It ensures that you can do large quantities of processing while minimizing the users wait time.
Useful in business processes that requires mass data transcations and syncing data information.
Difference b/w batch and bulk
         1. when using batch processing it can control the no of records or data to be used by configuring the batch size.
         2. For bulk actions, it pushes large amounts of data in one go.
create bulk:
      create list of new records in a single action
      Field configuration allows data mappings for creation of records
Upsert bulk:
      create list of new records in a single actions and update list of exisiting records
      A primary key such as external ID is required to determine whether a record exists



CSV tools by Workato


CSV file overview:
Comma separated values(CSV) file:this files are the one of the most commonly used files for exchanging information b/w system architecutures.
      Text file
      Stores tabular data
      Human-readable plain text
      Each line=one data record
      same no of fields
      separated by comma
Delimiters: A delimiter is a sequence of one or more characters for specifying the boundary between separate, independent regions in plain text, mathematical expressions or other data streams. 
Enclosing characters: You can also specify enclosing characters that mark both the start and end of a region of text, such as single or double quotation marks.
CSV use cases in workato: Keep track of client calls
To convert CSV content into usable datapills, you can parse them with Workato's built-in CSV parser or try a connector-specific CSV parser.
Certain connectors have triggers/actions that can parse CSV content. These are called connector-specific parsers or external parsers.
csv tools by workato:Workato tool available as an action in any recipe and can parse up to 50k rows.
Parsing with CSV Tools by Workato: 

Working with databases: 

All database connectors give you the option to connect through an on-prem agent.
To connect to a relational database in a virtual machine, we need:
         username and password
         windows authentication
         hostname + port of the database
To interact with your tables, the lowest set of privileges of the connected user should be set.
Connected user requires at least select privileges for chosen database.
Different triggers in database:
         New row
         New row/updated row(batch)
         New row via custom sql
         New row/updated row via custom SQL: using sql queries
         Scheduled query(batch): this will execute sql query in specified schedule
RDBMS apps can dispatch in batch/bulk processes. 
Triggers with batch/bulk processes can be used when dealing with hundrends or thousands of records.
Performing CRUD(create, read,update,delete) operations:
other that crud we have select and execute



RecipeOps:


Recipe Ops is a connector in Workato that enables the building of recipes to monitor and manage other recipes. Workato customers use RecipeOps to automate monitoring and recovery from errors and for other administrative functions.

Recipe Watch(Status and health):
      Monitor mission-critical automation
      Automatically start/stop during planned downtimes
      Status reporting
Automated Recovery(reduce unplanned downtime)
      Reduce unplanned downtime
      Custom workflows based on error types and messages
      Lossless pause, resume, auto-retry
Intelligent operations(rule based ops and bots):
      Custom rule-based bots, reporting, recovering
      Workflows when new collaborators join
Triggers in recipeops:
         Failed Jobs: The failed job trigger is able to monitor all active recipes or selected recipes, for failed jobs. This is useful in ensuring that key recipes are monitored and corrective actions, including notifications, can be automated.
         Recipe Started/Stopped by Workato/User: This trigger allows users to build contingencies for key recipes that should/not be started/stopped. For example, enforce a restart logic or setup customer escalation policies to inform key personnel when the recipe has been stopped.
         Account Connected/Disconnected: These trigger monitors apps connected/disconnected in Workato. On occasions, app connections can become invalid due to several reasons:
                        app credentials were changed and the connection was not updated correspondingly in Workato
                        connected user doesn't have the right set of permissions to read/write selected records
                        permissions of the connected user were changed to a reduced scope
         Customer Usage Threshold Reached: This will monitor all customers and triggers when a customer reaches thresholds of their usage limits for tasks according to their plan. Users will receive an event for every 10% of usage.
         Member Invitation Accepted: For Workato users who are team owners, admins, or have been given permissions to, they can monitor their collaborators who they have invited in their Team workspace.
         Packaged Deployed: Using this trigger will receive a notification when a package is deployed in your Workato Account.
Actions in recipeops:
            Stop/Start Recipe: This allows specified recipes to be started/stopped. A single recipe can be selected from a picklist. Alternatively, a selected recipe can be specified by ID.
            Get Account Details: Get information about the Workato account, such as subscription plan type, allotted and remaining transaction counts, recipe, and connection counts.
            Search Job History: This action lists the last 100 jobs by default. This action lets
                                 Users filter by job status e.g. show failed jobs only
                                 Users filter by date range as well
            Rerun Jobs: Using RecipeOps can help to rerun singular or bulk jobs in a specified recipe. This action requires a Job ID to be rerun. 
                        Usually these datapill can be retrieved from a RecipeOps trigger/action.
                        Dynamic list - Use this if the number of items or their content depends on another list. This is the most common input mode used. 
                        Fixed list - Use this if you know the total number of items and their content. This input mode is infrequently used.
                        List Connection: This action is useful to display the details of a specific connection or a list of connections. Connections can be filtered by name or recipe. Result is limited to 1000 recently updated connections.

HTTP connector


Workato HTTP Connector enables you to build integrations with any cloud applications that have an HTTP-based API and to build additional actions on the Workato platform.
Pros and cons of HTTP conector:
     Pro: The HTTP connectors enables quick connectivity to custom applications or application connections not yet available through workato.
      Cons: connectors is unable to handle certain complex API functionality.
      Pro: It is suitable for one-off requirements to connect to add/or perform an action within an application.
      Cons: Actions are not scalable.
There are two common types of web service APIs: Simple Object Access Protocol (SOAP) and Representational State Transfer (REST).
Workato communicates with any API using HTTP Connector:
      connections & Authorization
      request
      response
HTTP actions enable you to create custom requests and response schemas for HTTP-based APIs.
After you have setup your HTTP connection, you can now configure HTTP actions. Within the HTTP connector, you have the choice of two actions:
            Send request
            Send request and wait for response (private preview)



Recipe Lifecycle Management for Environments 

It is a series of steps your team can follow, from discovering automation ideas too implement and running workflows in production.
Help streamline end-to-end automation delivery process
Applies to any project regardless of methodology
Benefits of Recipe life cycle management:
      Improve productivity through effective collaboration
      Enhance business responsivesmess to change
      Increase business value hrough improved quality
Environment strategy: It is all about planning and structuring different enviroments. 
Good environmrnt strategy helps multiple teams collaborate efficiently.
benifits of Environment strategy:
      We recommend having atleast 3 seperate environments for Dev, Test, and Production
      Improve resilience by managing disruptions
      Enhance security and compliance
      Better control with seamless handover b/w teams
      Facilitate training of new members in a production-like environment
Environment strategy:
      Define lifecycle stages
      Identify individual roles and responsibilities
      Identify how many different teams you need to support
Decentralized Governance:We have a sales team and finance team building recipes independently for compliance reasons.
You can set up a seperate development, test and production environment for each group.

                     Pros                                    Cons

            Seperation of concerns                     Duplication of efforts

            Enhanced control                           Enforcing best practices across teams

Centralized Governance: It is to segment one or more team accounts to allow access to diff folders by diff teams.


                     Pros                                             Cons

            Consistent governance processes                     Role management

            Prevents shadow IT                                  Increased audit requirements

Roles and responsibilities:

                        Applicate Admin                        end-to-end change owneeship
Change Owner            Application Support                    Implement and test changes
                        Functional Analyst                     can create/edit recipes in non-production environment
                        Eg: HR Analyst                         Cannot to create connections
                                                               

                                                               
                        Business SME                           Assess and authorize changes
Change Manager          Process Analyst                        Coodination and communication
                        Business Analyst                       Oversight and ownership of the full worakto platform
                        Eg:Platform Admin                      Full access to platform and manages core security configuration

                                                               
                        Operations lead                        Represent change Advisory Board
Change Approver         COE lead                               Maintain devlopment standards
                        Solution Architect                     


                       Operations Engineer                    Plan and manage production releases
Release Manager        COE lead                               Rollback and communication planning
                       Application Admin                      Can import/export recipes b/w environements
                       Eg: HR Operations                      Can create/update recipes in production environment



                       Technical Business SME                  Monitor and report incidents
Incident Manager       Application Admin                       Support problem resolution
                       Centralized IT team                     Can view job reports in prodution enviroment
                       Eg: HR Manager                          Cannot create/edit recipes in prodution environment 

Recipe Lifecycle stages:
         Plan for building and operating automations
         Defines a set of steps to help deliver automations
         Improve teams overall effectiveness
Seamless collaboration with RLCM:
         Span multiple teams from differnr business units
         Manage and track tasks when you have several projects moving together
         vital to cohesive organization working towards common goal

RLCM:
      Discover: change management
                     Adapt change and release management processes
                     intake and manage automation projects
                     Track and manage automation change requests as independent projects.
                     Prioritize change requests
                     identify and enforce project workflow to best suit organization
                     Review and approval stages for each change
      Discover: Dependency Management
                     Manage dependencies b/w recipes, connections, lookup tables etc
                     critical function of managing automation lifecycles
                     Analyze and asses impact on shared assets before making changes
                     Coordinate shared asset changes such as calloble recipes or custom connectors.
                     Identify releases that will deploy shared asset changes in production


      Implement: Recipe Review
                     Essential checkpoint
                     Enforce standards
                     Adhere to security guidelines      
                     Ensure quality deliverables
                     Ensure compliance to security standards, naming conventions, design best practices and more
                     Facilitate recipe review through a pull request(PR) feature of an external version control system.
                     Provide review comments or request changes, and adjudicate changes for next lifecycle stage
      Implement: Testing
                     Inadequate testing can cause productivity loss, system outages, and data inconsistencies
                     Risk being out of compliance with laws, internal policies or regulatory requirements.
                     Test recipes before going live
                     Check recipes for defects and fitness for business requirements to ensure they perform efficiently
                     Have a dedicated Quality Assurance team for testing.
                     Devlopers can test recipes to perform functional testing
                     One or more business stakeholders perform functional testing
                     Validate automation addresses user expectations.
      Implement: Testing best practices
                     Understand end-to-end workflow and applications involved
                     Identify different test scenarios
                     test scenarios should provide adequate coverage including error handling validation
                     Test cases should include test data, preconditions, and expected outcomes
                     Identify and plan for non-functional testing needs
                     Test every change
      Implement: Regression Testing 
                      Design automations using callable recipes to perform business logic
                      Group multiple test recipes in a test suite for use in CI/CD(continous integration and delivery) pipeline
      Implement: versioning
                      Every time you save a recipe a new recipe version is created
                      optonally use external version control systems to maintain environment snapshots
                      Directly map workato packages in external version control systems. 
                      Avoid making recipe changes outside of workato platform


      Operate: Automation
                  Lookup tables maintain lists of important recipes
                  Monitor status of critical recipes with recipeOps
                  Execute steps of restart recipes or send notifications with recipeOps if ctitical errors encountered
                  Manage third-party application planned downtime
                  Maintain schedule in lookup table
                  Automatically stop and start recipes for maintenance window
                  Restart recipes to consume any unprocesses business events

                     Automated Monitoring:
                                 Automated monitoring of mission-critical automations with recipeops
                                 Automatically manage planned downtime
                                 status alerts
                     Automated Recovery:
                                 Zero event loss automation pause,resume, and auto-retries
                                 Business processcentric custom recovery workflow
                                 Workbot based reporting recovery
 Automated Monitoring +  Automated Recovery = Intelligent Operations
                     Intelligent Operations:
                                 Increase operational uptime
                                 Discover and troubleshoot operational and business process issues faster
                                 Increased stakeholders trust
                                 Automate workflows to manage platform collaborators

      Operate: Auditing
                     Regular compliamce audits of production environments
                     Governance and oversight ensures only approved changes are promoted to production
                     Regular track changes made to recipes, connections, folders, and more

Manifest: It is a record of all the selected recipes and their dependencies.
Exported package includes all selected recipes and their dependencies need for automation to work
Release types:
            Major:
                  New automation or major enhancements
                  All assets are built,test and implemented together
                  Regressing tested to ensure zero impact on existing bevaior
            Minor:
                  Includes only changes assets since last release
                  Limited testing requirements
                  Minimal impact on existing business process behavior
            Bug-fix:
                  Production issues fixed with configuration changes
                  Production issues fixed with recipe changes

Release planning:
            Build & test Plan
                        Approved changes
                        test results
                        user acceptance criteria
            Deployement plan
                        Release package
                        Rollback plan
                        Production freeze schedule
            validation plan
                        Deployment approval
                        Release success validation
            communication plan
                         End-user communication
                         End-user training
            Review plan
                         Monitor release
                         improve metrics
                         Lessons learnt from feedback for next release


Continous Integration(CI):
     Benefits:
            Faster release cycles
            Deliver quality automations
      Goal:
            Automate way teams build,test and package automations
            helps automate delivery to multiple enviroments
            Easier for teams to coordinate deployment,run quality controld on release, and reduce errors.

GEARS Framework


The GEARS Framework is a collection of guides, best practices, and other assets that help you build, maintain and mature your automation practice. 
The Five Domains of GEARS

GEARS is an acronym that represents the five different domains that make up the framework. 
                           Govern
                           Enable
                           Adopt
                           Run
                           Scale
Challenges in scaling automation:
Scaling an automation practice typically faces both organizational and technical challenges.
               Automation Opportunities & delivery backlog: Opportunities for automation are growing everyday with newer technologies and so too are backlogs for delivery teams
               Availability of specialized resources: specialized integration resources are becoming more difficult to find and therefore scaling up on legacy integration tools becomes difficult
               Decentralized DevOps & product teams: Product focused teams are being formed to specialize in specifif business processes and data
               Solution Delivery budgets and Timelines: Expectations for increses use of technology are combined with downward pressure on delivery timelines and budgets.
Three Steps to Building an Automation Practice
      Create a strong foundation: Establish security policies, quality assurance and automation lifecycle processes to build and operate automation projects 
                                  without any disruption(Govern, Run).
      Build a culture of automation: Create a well-defined enablement approach to help people with different skills build automations. Support them through an onboarding process, 
                                     and foster adoption by getting more people in the organization to build automations and unlock project delivery capacity(Adopt, Enable).
      Harness value at scale: Begin to scale by ensuring each initiative and automation is aligned with the enterprise strategy and pushes the business goals forward(scale). 
                              This is where you start to report the business impact of automation and continuously improve the different business processes to become more efficient.
Each domain of the framework can be broken down into actionable building blocks called Levers
by applying Recipe Lifecycle Management Processes.

GOVERN          Intake & Prioritization     Architecture & Design        Security & Administration               Automation Lifecycle Management

ENABLE          Resource Center             Onboarding & Education       Accelerators & Reusable Assets          Automation Lifecycle Management      Automation              Business 
                                                                                                                                                        HQ                   Technology
ADOPT           Value Reporting             Onboarding & Education       Champions & Evangelism                  Community                                                    Strategy

RUN             Project Execution           Capacity Planning           Support Model                            Operations

SCALE           Automation Maturity          Automation Discovery             Enterprise Automation Ecosystem
                  & Improvement

GOVERN
      Intake & prioritization involve two parts. First, an intake process for stakeholders to submit new project requests, automation ideas, and improvement suggestions. A well-defined project request or intake process eliminates back and forth between different stakeholders and streamlines collaboration.
                              Second, is the prioritization of automation requests. It provides a framework for defining the business value and complexity of requests so that everyone has a shared understanding of a project's priority and success metrics. 
                              Intake & prioritization allows teams to organize and update their backlog to work on the highest business impact requests and creates cross-functional visibility where all stakeholders and business teams know the status of their requests.
      Architecture & Design refers to the practice of defining the architectural styles and design principles that builders should follow when building new Workato Assets. 
                            Finally, in this stage, the Automation HQ team should identify the potentially reusable assets or common services that will feed into the “Accelerators & reusable assets” lever.
      Security & administration focuses on establishing guardrails that extend the freedom to build automations without opening the organization to unmanaged risks to its apps and data. 
                                 User-owned security and administration aspects can be divided into the following categories:
                                          Automation asset management approach 
                                          Role-based access policies
                                          User authentication and management
                                          App connections & data security
                                          Audit and compliance management
      Automation lifecycle management is a series of steps that teams can follow, from discovering automation ideas to implementing and running them in production. 
ENABLE
      Resource Center enables builders and provides general useful information about the automation practice for those involved or interested in knowing more. It makes resources easily available to everyone on whatever internal website or collaboration platform the company uses.
      Onboarding and Education provide users and builders with what they need to be successful and contribute quickly and effectively to the automation practice.
      Accelerators & Reusable Assets, including commonly used patterns, use cases, and functionality enable even faster development of solutions as well as templating of standards and best practices.
ADOPT
      Value Reporting is about adopting a systemic and consistent approach to quantify the impact of automation by involving  different forms of Key Performance Indicators such as: 
               Operational Cost Savings 
               Revenue Impact 
               Risk & Compliance
      Champions & Evangelism focuses on spreading the word about how automation can solve business problems and the value that it can bring.
      Community is an important tool to build collaboration and develop a culture of automation by providing a program for guidance and practical experience, idea exchange, and fostering connections across team.
RUN 
      Project Execution with a low-code/no-code development approach, the Workato platform is built to deliver with speed and agility. Adopting lean automation with a Scrum-based  Agile delivery approach can complement the platform capabilities and gives a quick turnaround to deploy, execute the pilot and convert it into a production version.
      Capacity Planning is the practice of calculating (and predicting) the required capacity (either the number of recipes or task consumption) to support ongoing and future initiatives.
      Support Models describe the different channels any given user can leverage for:
                     Development support (e.g. if they get stuck on a particular recipe) 
                     Product support (e.g. automation breaks or bugs found)
            Support Levels: 
                     [Level 0] Self-support: Enabled through crowd-sourcing (e.g. Slack channels, community forums) and self-serve (e.g. knowledge hubs or Workato Chat support)
                     [Level 1] Ops team: Formal process to log a ticket to the internal central Ops Team for assistance
                     [Level 2] Workato support: Formal process to log a support ticket with Workato. Ideally, tickets will be created by the central Ops Team
                     [Level 3] Workato escalation: Formal process to escalate critical open support tickets through assigned CSM
      Operations lever focuses on the day to day operational activities related to running an enterprise automation platform. These are the main focus areas that need to be addressed:
                  Monitoring. Proactive and reactive tracking of production assets
                  Log aggregation strategy
                  Analytics
                  Error handling and Notifications
                  Concurrency and Performance   
SCALE
      Automation Maturity & Improvement lever, a maturity level is used as an assigned grade with predetermined sets of criteria to evaluate the various parameters impacting the performance of enterprise automation practice.
      Automation Discovery is a  journey. To keep the momentum going and make automation core to optimizing operations and driving business value, it's imperative to have a consistent pipeline of potential automation candidates. 
      Enterprise Automation Ecosystem lever focuses on how an Enterprise Automation platform fits within the Business Technology integration and automation tech stack ecosystem. While Enterprise Automation should cover the vast majority of scenarios for wall-to-wall automations, the reality is that there 
               are multiple cases that will require a specialized platform to work in tandem with the Enterprise Automation Platform. 
Phased approach to automation at scale:
      Incubation: start small with an Automation First Mentality             
      Acceleration:Grow organically through an Automation Factory
      Institutionalization: Become faster over time with Automation at scale


















