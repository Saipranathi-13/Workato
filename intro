What is Workato?
It is defined with 2 words called work and automation. Workato is essentially an enterprise garde automation platform
in It finance and all the different departments we can use waorkato and we can build automation.Workato is essentially serverless platform
Workato, It allows users to automate business processess like this in a very usual visual way without a developer skill set.
This is what refer to low code. no code
Tools in workato:
ETL/ELT: involving bulk. Transfer of data could be thousands of records or millions of records.
API Management: can expose your integration to external parties or apps if required, where workato
can also create workflow.
conversational bots are able to build and deploy interactive work bots in the workplace.
Workato environment- workato workspaces- different integrations that will be building our recipes.
1. Dev Workspaces: developing recipes in development team
2. QA workspace: QA team to check your recipe 
3. Prod workspace: all of your instances are connected to your production environment.
Recipes can be migrated from one account to another via the Recipe Lifecycle Management tool.
Each Workato user may be given access to multiple environment.
Recipe is very similar to like a cookbook. It is logical steps that will be executed to meet your integration.
recipe can be create using 2 methods. 1. our own 2. cloning
3 main ingredients of a recipe
1. Connections: all applications need to have connected to your recipe.
2. Trigger: can only be 1, what your recipe will listen for, or this is what will tell your recipe to kick start.
3. actions: all of the steps that you would want to execute in your recipe. no limit for actions.
if we dont have trigger then recipe will not start.
2 ways to share recipe:
1. List recipe: we have list of the recipes
2. Private sharing link: sharing link it will be private.
Connections: when we are connect to other applications inside worato. it allows you to pick authentication options
basic auth, Oauth2, API tokens, custom protocols.It is simple like username and password.
Triggers have different types:
1. Real-time: implemented with web hooks
2. Polling- implemented with web hooks
3. Scheduled- scheduling the time
Trigger events are delivered in the same order as events were created or modified in theapp- workato cursors.
Trigger conditions: you are able to define more information in your triggers if you do not want to process all of the records.
recipe steps can be simple actions, or control flow statements that help you describe business logic.
what work does your recipe do:
1. actions types- adding, searching,updating, deleting
2. control- conditions, loops,error monitor(try-catch), stop, Recipe functions.
3. Data- single, Batch/list.
Data mapping- mapping, formulas, lookups.
Recipe data box, this is a placeholder for the information from your previous steps.
data pills: information in recipe box which we have in small boxes with data.
.slice(start_index,length)- get part of a string.
Data types: data pills can be of the following 
string, integer, number, object, date, date time, boolean, Array.list.
Formula Mode- 
split: split up a string based on a delimiter
First: Returns the first iteam in the list.
Upcase: coverts the entire string into upper case



Automation pro 2



Conditional Actions: set a condition within your recipe to better define the overall workflow processing logic.
Conditional Actions will only be carried out only if the specified condition is true.
2 types of conditional actions:
1. IF- will only be executed when the conditions are met.
2. IF-ELSE- if conditions are true, actions within the if block will be executed . otherwise if false the actions within the else block will be executed.
Workato will work on nested conditional actions.
 we have 3 different fileds to configure conditional actions
1. data field: typically mapped by a dynamic data pill
2. condition: depends on data type 
3. value: mapped by a fixed input value.
conditions are sensitive to data types.
common use cases:
1. Deduplication logic
2. stopping the recipe
3. invoking different function recipes.
4. setting up notifications for different error messages.
Error Handling: used to monitor actions and retry failed steps
configuring error monitoring and handling:
1. retry the sequence of actions
2. take remedial actions








